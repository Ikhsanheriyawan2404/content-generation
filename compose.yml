services:
  # Golang API
  video-api:
    build: ./ffmpeg-go
    container_name: video-api
    environment:
      - PORT=${APP_PORT}
      - MINIO_URL=${MINIO_URL}
      - MINIO_PORT=${MINIO_PORT}
      - MINIO_CONSOLE_PORT=${MINIO_CONSOLE_PORT}
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY}
      - MINIO_USE_SSL=${MINIO_USE_SSL}
    volumes:
      - /tmp:/tmp
    depends_on:
      - minio
    restart: unless-stopped
    networks:
      - video-network

  # Node.js API
  node-api:
    build: ./gemini-client
    container_name: node-api
    environment:
      - PORT=${APP_PORT}
      - MINIO_ENDPOINT=${MINIO_ENDPOINT}
      - MINIO_PORT=${MINIO_PORT}
      - MINIO_CONSOLE_PORT=${MINIO_CONSOLE_PORT}
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - DATABASE_URL=${DATABASE_URL}
    depends_on:
      - minio
    restart: unless-stopped
    networks:
      - video-network

  # MinIO Service
  minio:
    image: minio/minio:latest
    container_name: minio
    ports:
      - "${MINIO_PORT}:${MINIO_PORT}"
      - "${MINIO_CONSOLE_PORT}:${MINIO_CONSOLE_PORT}"
    environment:
      - MINIO_ROOT_USER=${MINIO_ACCESS_KEY}
      - MINIO_ROOT_PASSWORD=${MINIO_SECRET_KEY}
    volumes:
      - minio_data:/data
    command: server /data --console-address ":${MINIO_CONSOLE_PORT}"
    restart: unless-stopped
    networks:
      - video-network

  n8n:
    image: docker.n8n.io/n8nio/n8n
    container_name: n8n
    volumes:
      - n8n_data:/home/node/.n8n
    restart: unless-stopped
    environment:
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=${N8N_USER}
      - N8N_BASIC_AUTH_PASSWORD=${N8N_PASSWORD}
    networks:
      - video-network

volumes:
  minio_data:
    driver: local
  n8n_data:
    driver: local

networks:
  video-network:
    driver: bridge